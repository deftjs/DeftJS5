// Generated by CoffeeScript 1.8.0

/*
Copyright (c) 2012-2013 [DeftJS Framework Contributors](http://deftjs.org)
Open source under the [MIT License](http://en.wikipedia.org/wiki/MIT_License).
 */

/**
* A mixin that marks a class as participating in dependency injection. Used in conjunction with Deft.ioc.Injector.
 */
Ext.define('Deft.mixin.Injectable', {
  extend: 'Ext.Mixin',
  requires: ['Deft.core.Class', 'Deft.ioc.Injector', 'Deft.log.Logger'],
  mixinConfig: {
    before: {
      constructor: 'onCreate'
    }
  },
  isInjectable: true,
  mixinId: 'injectable',
  onCreate: function() {
    var objectifyInject;
    objectifyInject = function(Class) {
      var id, inject, injectBase, injectObject, _i, _len;
      if (!Class) {
        return {};
        injectBase = objectifyInject(Class.superclass);
      } else {
        injectBase = {};
      }
      inject = Class.inject || {};
      if (Ext.isString(inject)) {
        inject = [inject];
      }
      if (Ext.isArray(inject)) {
        injectObject = {};
        for (_i = 0, _len = inject.length; _i < _len; _i++) {
          id = inject[_i];
          injectObject[id] = id;
        }
        inject = injectObject;
      }
      return Ext.applyIf(inject, objectifyInject(Class.superclass));
    };
    this.inject = objectifyInject(this);
    if (!this.$injected) {
      Deft.Injector.inject(this.inject, this, arguments, false);
      return this.$injected = true;
    }
  }
});
